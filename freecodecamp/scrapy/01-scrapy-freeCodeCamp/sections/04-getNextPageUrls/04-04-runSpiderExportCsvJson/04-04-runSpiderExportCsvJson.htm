<h1>03-04-scrapeInBookUrl (part 5 1:11:50)</h1>
<div class="steps-container show">
    <!-- 01-01 -->
    <div class="step-col-wide">
        <div tabindex="1" class="step-txt">
            <h4>01</h4>
            <p>
                This will not show in json in the same order as it appears on the webpage
                go to 
                <a tabindex="1"  href="#step01 ">step 3 below</a> at the bottom of page for alternative code for correct order
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code sm-code">
import scrapy 
class BookspiderSpider(scrapy.Spider):
    name = 'bookspider'
    allowed_domains =['books.toscrape.com']
    start_urls = ["https://books.toscrape.com/"]
    def parse(self,response):
        books = response.css('article.product_pod')
        for book in books:
            relative_url = book.css('h3 a::attr(href)').get()
            if 'catalogue' in relative_url:
                relative_url = 'https://books.toscrape.com/' + relative_url
            else:
                relative_url = 'https://books.toscrape.com/catalogue/' + relative_url
            yield response.follow(relative_url, callback=self.parse_book_page)

        next_page = response.css('li.next a::attr(href)').get()
        if next_page is not None:
            if 'catalogue/' in next_page:
                next_page_url = "https://books.toscrape.com/" + next_page
            else:
                next_page_url = "https://books.toscrape.com/catalogue/" + next_page
            yield response.follow(next_page_url, callback=self.parse)
            
    def parse_book_page(self,response):
        rows = response.css('table tr')
    
        yield {
            'title':          response.css('h1::text').get(),
            'url':            response.url,
            'product_type':   rows[1].css('td::text').get(),
            'price_excl_tax': rows[2].css('td::text').get(),
            'price_incl_tax': rows[3].css('td::text').get() ,
            'tax':            rows[4].css('td::text').get(),
            'stars':          response.css('p.star-rating').attrib['class'].split()[1],
            'category':       response.xpath("//ul[@class='breadcrumb']/li[@class='active']/preceding-sibling::li[1]/a/text()").get(),
            'description':    response.xpath("//div[@class='product_description']/following-sibling::p"),
            'price':          response.css('.price_color::text').get()
        }


</pre>
            </div>
        </div>
        
    </div>
    <div class="step">
        <div tabindex="1" class="step-txt">
            <h4>02</h4>
            <p>
                run spider save to .json or .csv
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code">
scrapy runspider bookspider.py -O bookdata.json
                </pre>
            </div>
            

            
        </div>
        <div class="step-img">
            <img  src="/scrapy/01-scrapy-freeCodeCamp/sections/04-getNextPageUrls/04-02-scrapeInBookUrl/images/01-04.png">
        </div>
    </div>
    <!-- 01-03 -->
    <div class="step-col">
        <div tabindex="1" class="step-txt">
            <h4></h4>
            <p>
                Same order as on webpage
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code">

                </pre>
            </div>
            
        </div>
        
    </div>
    
</div>
<footer>
    <button tabindex="1" id="nxtLesson">next</button>    
</footer>
