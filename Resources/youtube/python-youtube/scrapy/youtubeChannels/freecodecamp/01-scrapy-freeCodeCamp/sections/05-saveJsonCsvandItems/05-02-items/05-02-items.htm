<h1>05-02-items() (part 6 1:21:15)  </h1>
<div class="steps-container show">
    <!-- 01-01 -->
    <div class="step">
        <div tabindex="1" class="step-txt">
            <h4>01</h4>
            <p>
                &emsp; Instead of puting the data in <code>yeild</code>, we can place the data in the default 
                <code class="m">items.py</code> script as and item, import a <code class="dc">BookItem</code> and <code>yield</code>
                the <code class="gr">bookItem</code>
            </p>
            <p>
                This is safe to do so we check for typos, in case we type something wrong it will tell us where
            </p>
            
        </div>
        <div class="step-img">
            <img src="/documentation/python/scrapy/youtubeChannels/freeCodeCamp-scrapy/01-scrapyCoursePythonWebScrapBegin/sections/05-saveJsonCsvandItems/05-02-items/images/01-01.png">
        </div>
    </div>
    <!-- 01-02 -->
    <div class="step">
        <div tabindex="1" class="step-txt playVid-click">
            <h4>02</h4>
            <p>
                Copy the yield values from <code>bookspider.py</code> and place them into the <code class="dc">BookItem</code> scrapy class in
                <code>items.py</code> and assign the keys to a value of <code class="dc">scrapy.Field()</code>
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code">
import scrapy
class BookItem(scrapy.Item):
    url = <span class="c" >scrapy.Field</span>()
    title = <span class="c" >scrapy.Field</span>()
    product_type = <span class="c" >scrapy.Field</span>()
    price_excl_tax= <span class="c" >scrapy.Field</span>()
    price_incl_tax = <span class="c" >scrapy.Field</span>()
    tax = <span class="c" >scrapy.Field</span>()
    availabiity = <span class="c" >scrapy.Field</span>()
    num_rerrviews = <span class="c" >scrapy.Field</span>()
    stars = <span class="c" >scrapy.Field</span>()
    catagory = <span class="c" >scrapy.Field</span>()
    price = <span class="c" >scrapy.Field</span>()
                </pre>
            </div>
            
        </div>
        <div class="step-vid">
            <video
                src="/documentation/python/scrapy/youtubeChannels/freeCodeCamp-scrapy/01-scrapyCoursePythonWebScrapBegin/sections/05-saveJsonCsvandItems/05-02-items/images/01-02.mov">
        </div>
    </div>
    <!-- 01-03 -->
    <div class="step">
        <div tabindex="1" class="step-txt ">
            <h4>03</h4>
            <p>
                <span class="r">This isn't explained well</span> but we can add methods to the <code class="gr">serializer</code>
                attribute of <code class="dc">scarpy.Field()</code>, the
                method <code class="m">serialize_price</code>  will add a € sign
            </p>
            <p class="lgtxt r">
                We can also do this in the pipelines.py file when files are larger
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code">
import scrapy
def <span class="m">serialize_price</span>(val):
    return f'€{str(val)}'
class BookItem(scrapy.Item):

    url = scrapy.Field()
    title = scrapy.Field()
    product_type = scrapy.Field()
    price_excl_tax= <span class="c">scrapy.Field</span>(<span class="gr">serializer</span>= <span class="m">serialize_price</span>)
    price_incl_tax = scrapy.Field()
    tax = scrapy.Field()
    availabiity = scrapy.Field()
    num_rerrviews = scrapy.Field()
    stars = scrapy.Field()
    catagory = scrapy.Field()
    price = scrapy.Field()
                </pre>
            </div>
            
        </div>
        <div class="step-img">
            <img src="/documentation/python/scrapy/youtubeChannels/freeCodeCamp-scrapy/01-scrapyCoursePythonWebScrapBegin/sections/05-saveJsonCsvandItems/05-02-items/images/01-03.png">
        </div>
    </div>
    <!-- 01-04 -->
    <div class="step">
        <div tabindex="1" class="step-txt playVid-click">
            <h4>04</h4>
            <p>
                Import the <code class="dc">BookItem</code> class from <code>items.py</code>
                into the spider and convert the <code class="m">yield</code> values to a <code class="dc">bookItem</code>
                instance and <code class="m">yield that instead</code>
            </p>
        </div>
        <div class="step-vid">
            <video src="/documentation/python/scrapy/youtubeChannels/freeCodeCamp-scrapy/01-scrapyCoursePythonWebScrapBegin/sections/05-saveJsonCsvandItems/05-02-items/images/01-04.mov">
        </div>
    </div>
    
</div>
<footer>
    <button tabindex="1" id="nxtLesson">next</button>    
</footer>
