<h1>03-04-scrapeInBookUrl (part 5 1:11:50)</h1>
<div class="steps-container show">
    <!-- 01-01 -->
    <div class="step">
        <div tabindex="1" class="step-txt">
            <h4>01</h4>
            <p>
                Put the elements found in the scrapy shell in the previous lesson into the spider scrip
            </p>
            <div class="code-container">
                <pre tabindex="1" class="copy-code sm-code">
import scrapy
class BookspiderSpider(scrapy.Spider):
    name = 'bookspider'
    allow_domains = ['books.toscrape.com']
    start_urls = ['http://books.toscrape.com/']
    
    def parse(self,response):
        books = response.css('article.product_pod')
        for book in books:
            relative_url = book.css('h3 a::attr(href)').get()
            if 'catalogue' in relative_url:
                next_book_url = 'http://books.toscrape.com/' + relative_url
            else:
                next_book_url = 'http://books.toscrape.com/catalogue/' + relative_url
            yield response.follow(next_book_url,callback=self.parse_book_page)

        next_page = response.css('li.next a::attr(href)').get()
        if next_page is not None:
            if 'catalogue' in next_page:
                next_page_url = 'http://books.toscrape.com/' + next_page
            else:
                next_page_url = 'http://books.toscrape.com/catalogue/' + next_page
            yield response.follow(next_page_url, callback=self.parse)
    def parse_book_page(self,response):
        table_rows = response.css('table > tr')
        yield {
            <span class="m">'url': response.url,
            'title': response.css('.product_main h1::text').get(),
            'product_type': table_rows[1].css('td::text').get(),
            'price_excl_tax': table_rows[2].css('td::text').get(),
            'price_incl_tax': table_rows[3].css('td::text').get(),
            'tax': table_rows[4].css('td::text').get(),
            'availabiity': table_rows[5].css('td::text').get(),
            'stars': response.css('p.star-rating').attrib['class'],
            'catagory': response.xpath("//ul[@class='breadcrumb']/li[@class='active']/preceding-sibling::li[1]/a/text()").get(),
            'price': response.css('p.price_color ::text').get()</span>
        }
                </pre>
            </div>
            
        </div>
        <div class="step-img">
            <img src="/documentation/python/scrapy/youtubeChannels/freeCodeCamp-scrapy/01-scrapyCoursePythonWebScrapBegin/sections/04-getNextPageUrls/04-04-putElsInScript/images/01-01.png">
        </div>
    </div>
    
</div>
<footer>
    <button tabindex="1" id="nxtLesson">next</button>    
</footer>
